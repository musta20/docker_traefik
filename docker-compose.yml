services:

    traefik:
        image: traefik:v2.11
        container_name: "${PROJECT_NAME}_traefik"
        restart: always
        command:
            - --entrypoints.web.address=:80
            - --providers.docker=true
            - --api.insecure=true
            - --providers.file.directory=/etc/traefik
            - --log.level=debug
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'    
            - "./traefik/traefik.toml:/etc/traefik/traefik.toml"
            - "./traefik/dynamic_conf.toml:/etc/traefik/dynamic_conf.toml"
        ports:
             - '80:80'
             - '8080:8080'
        networks:
             - docker_network

    iginx_asset: 
        container_name :
            "asset_nginx"
        depends_on:
            - traefik
            - asset

        build: 
            context:
                ../assets_management_laravel/docker/nginx
            dockerfile: Dockerfile

        volumes:
            - ../assets_management_laravel/:/var/www/vhost/asset/
            - ../assets_management_laravel/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ../assets_management_laravel/docker/nginx/nginx.d:/etc/nginx/conf.d
            - ../assets_management_laravel/docker/nginx/ssl:/etc/nginx/ssl
            
        working_dir: /var/www/vhost

        networks:
            - docker_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.iginx_asset.rule=Host(`asset.localhost`)"
            - "traefik.http.services.iginx_asset.loadbalancer.server.port=80"
            - "traefik.docker.network=docker_network"

    iginx_mybnb: 
        container_name :
            "mybnb_nginx"

        build: 
            context:
                ../mybnb/docker/nginx
            dockerfile: Dockerfile
            
        depends_on:
            - traefik
            - mybnb

        volumes:
            - ../mybnb/:/var/www/vhost/mybnb/
            - ../mybnb/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ../mybnb/docker/nginx/nginx.d:/etc/nginx/conf.d
            - ../mybnb/docker/nginx/ssl:/etc/nginx/ssl
            
        working_dir: /var/www/vhost
        

        networks:
            - docker_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.iginx_mybnb.rule=Host(`mybnb.localhost`)"
            - "traefik.http.services.iginx_mybnb.loadbalancer.server.port=80"
            - "traefik.docker.network=docker_network"

    iginx_baseproject: 
        container_name :
            "baseproject_nginx"

        build: 
            context:
                ../mybnb/docker/nginx
            dockerfile: Dockerfile
            
        depends_on:
            - traefik
            - baseproject

        volumes:
            - ../baseProject/:/var/www/vhost/baseProject/
            - ../baseProject/docker/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ../baseProject/docker/nginx/nginx.d:/etc/nginx/conf.d
            - ../baseProject/docker/nginx/ssl:/etc/nginx/ssl
            
        working_dir: /var/www/vhost
        

        networks:
            - docker_network
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.iginx_baseproject.rule=Host(`baseproject.localhost`)"
            - "traefik.http.services.iginx_baseproject.loadbalancer.server.port=80"
            - "traefik.docker.network=docker_network"

    asset: 
        container_name: "asset_php"
        build: 
            context: ../assets_management_laravel/docker/php
            dockerfile: Dockerfile

            args:
                user: 'root'
                uid: 1000
        
        environment:
                PHP_MEMORY_LIMIT: '512M'
                COMPOSER_MEMORY_LIMIT: '-1'

        working_dir: /var/www/vhost/asset/

        volumes:
            - ../assets_management_laravel/:/var/www/vhost/asset/
        networks:
            - docker_network

    mybnb: 
        container_name: "mybnb_php"
        build: 
            context: ../mybnb/docker/php
            dockerfile: Dockerfile

            args:
                user: 'root'
                uid: 1000
        
        environment:
                PHP_MEMORY_LIMIT: '512M'
                COMPOSER_MEMORY_LIMIT: '-1'

        working_dir: /var/www/vhost/mybnb/

        volumes:
            - ../mybnb/:/var/www/vhost/mybnb/
        networks:
            - docker_network
    baseproject: 
        container_name: "baseproject_php"
        build: 
            context: ../baseProject/docker/php
            dockerfile: Dockerfile

            args:
                user: 'root'
                uid: 1000
        
        environment:
                PHP_MEMORY_LIMIT: '512M'
                COMPOSER_MEMORY_LIMIT: '-1'

        working_dir: /var/www/vhost/baseProject/

        volumes:
            - ../baseProject/:/var/www/vhost/baseProject/

        networks:
            - docker_network

    baseproject_mariadb:
        image: mariadb:latest
        container_name: "baseproject_docker_mysql"
        environment:
            MYSQL_ROOT_PASSWORD: '${BASEOROJECT_DB_PASSWORD}'
            MYSQL_DATABASE: '${BASEOROJECT_DB_DATABASE}'
            MYSQL_USER: '${BASEOROJECT_DB_USERNAME}'
            MYSQL_PASSWORD: '${BASEOROJECT_DB_PASSWORD}'
            MYSQL_TCP_PORT: '${BASEOROJECT_DB_PORT}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'YES'
            command: mysql --character-set-server=utf8mb4 --collaction-server
        volumes:
            - 'baseproject_docker_mysql:/data'
        ports:
            - '3308:3308'
        networks:
            - docker_network

    asset_mariadb:
        image: mariadb:latest
        container_name: "asset_docker_mysql"
        environment:
            MYSQL_ROOT_PASSWORD: '${ASSET_DB_PASSWORD}'
            MYSQL_DATABASE: '${ASSET_DB_DATABASE}'
            MYSQL_USER: '${ASSET_DB_USERNAME}'
            MYSQL_PASSWORD: '${ASSET_DB_PASSWORD}'
            MYSQL_TCP_PORT: '${MYBNB_DB_PORT}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'YES'
            command: mysql --character-set-server=utf8mb4 --collaction-server
        volumes:
            - 'asset_docker_mysql:/data'
        ports:
            - '3306:3306'
        networks:
            - docker_network

    mybnb_mariadb:
        image: mariadb:latest
        container_name: "mybnb_docker_mysql"
        environment:
            MYSQL_ROOT_PASSWORD: '${MYBNB_DB_PASSWORD}'
            MYSQL_DATABASE: '${MYBNB_DB_DATABASE}'
            MYSQL_USER: '${MYBNB_DB_USERNAME}'
            MYSQL_PASSWORD: '${MYBNB_DB_PASSWORD}'
            MYSQL_TCP_PORT: '${MYBNB_DB_PORT}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'YES'
            command: mysql --character-set-server=utf8mb4 --collaction-server
        volumes:
            - 'mybnb_docker_mysql:/data'
        ports:
            - '3307:3307'
        networks:
            - docker_network


networks:
        docker_network:
            driver: bridge

volumes:
     asset_docker_mysql:
         driver: local
     mybnb_docker_mysql:
         driver: local
     baseproject_docker_mysql:
         driver: local
